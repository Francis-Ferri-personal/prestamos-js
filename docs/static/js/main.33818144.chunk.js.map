{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helpers.js","componentes/Mensaje.js","componentes/Resultado.js","componentes/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["Header","titulo","Formulario","props","cantidad","guardar_cantidad","plazo","guardar_plazo","guardar_total","guardar_cargando","useState","error","guardar_error","onSubmit","e","preventDefault","setTimeout","total","total_cantidad","total_plazo","calcular_total","className","type","placeholder","onChange","parseInt","target","value","Mensaje","Resultado","toFixed","Spinner","App","componete","cargando","descripccion","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.33818144.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//function Header({titulo}) { // Se puede alicar destructuring\r\n\r\n// Forma 3\r\nconst  Header = ({titulo}) => (\r\n    <h1>{titulo}</h1>\r\n);\r\n\r\n// Forma 2\r\n/* const  Header = ({titulo}) => {\r\n    const total = 1 + 2;\r\n    return ( \r\n        <h1>{total}</h1>\r\n    );\r\n};\r\n */\r\n// Forma 1\r\n/*\r\nconst  Header = ({titulo}) => {\r\n    return ( \r\n        <Fragment>\r\n            <h1>{titulo}</h1>\r\n        </Fragment>\r\n     );\r\n}\r\n*/\r\n\r\nexport default Header","import React, {Fragment, useState} from 'react';\r\nimport {calcular_total} from \"../helpers\";\r\n\r\n\r\nconst Formulario = (props) => {\r\n\r\n    const {cantidad, guardar_cantidad, plazo, guardar_plazo, guardar_total, guardar_cargando} = props;\r\n    // definir state\r\n    const [error, guardar_error] = useState(false);\r\n   // Cuando el usuario hace submit\r\n   const calcularPrestamo = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if (cantidad === 0 || plazo === \"\"){\r\n            guardar_error(true);\r\n            return;\r\n        }\r\n\r\n        // Eliminar error previo\r\n        guardar_error(false);\r\n        \r\n        // Habilitar el spinner\r\n        guardar_cargando(true);\r\n        setTimeout(() => {\r\n            // Realizar la cotizacion\r\n            const total = calcular_total(cantidad, plazo);\r\n            \r\n            // Una vez calcuilado guiardar total\r\n            guardar_total(total);\r\n\r\n            // Desabilitar el spinner\r\n            guardar_cargando(false);\r\n        },3000);\r\n    }\r\n\r\n    return ( \r\n    <Fragment>\r\n        <form onSubmit={ calcularPrestamo }>\r\n            <div className=\"row\">\r\n                <div>\r\n                    <label>Cantidad Prestamo</label>\r\n                    <input \r\n                        className=\"u-full-width\" \r\n                        type=\"number\" \r\n                        placeholder=\"Ejemplo: 3000\" \r\n                        onChange = {e =>  guardar_cantidad(parseInt(e.target.value))}\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <label>Plazo para Pagar</label>\r\n                    <select \r\n                        className=\"u-full-width\"\r\n                        onChange = {e =>  guardar_plazo(parseInt(e.target.value))}\r\n                    >\r\n                        <option value=\"\">Seleccionar</option>\r\n                        <option value=\"3\">3 meses</option>\r\n                        <option value=\"6\">6 meses</option>\r\n                        <option value=\"12\">12 meses</option>\r\n                        <option value=\"24\">24 meses</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <input \r\n                        type=\"submit\" \r\n                        value=\"Calcular\" \r\n                        className=\"button-primary u-full-width\" \r\n                    />\r\n                </div>\r\n            </div>\r\n    </form>\r\n    {(error)?  <p className = \"error\">Todos los campos son obligatorios</p> : null}\r\n   \r\n</Fragment>\r\n     );\r\n}\r\n \r\nexport default Formulario;","export function calcular_total(cantidad, plazo){\r\n    // Cantidades\r\n    // 0 -1000 = 25%\r\n    // 1001 - 5000 = 20%\r\n    // 5001 - 10000 = 15%\r\n    // +10000 = 10%\r\n\r\n    let total_cantidad;\r\n    if(cantidad <= 1000){\r\n        total_cantidad = cantidad * .25;\r\n    }else if(cantidad > 1000 && cantidad <= 5000){\r\n        total_cantidad = cantidad * .20;\r\n    }else if(cantidad > 5000 && cantidad <= 10000){\r\n        total_cantidad = cantidad * .15;\r\n    } else {\r\n        total_cantidad = cantidad * .10;\r\n    }\r\n\r\n    // Calcular el plazo\r\n    // Cantidades\r\n    // 3 = 5%\r\n    // 6 = 10%\r\n    // 12 = 15%\r\n    // 24 = 20%\r\n    let total_plazo = 0;\r\n    switch (plazo){\r\n        case 3:\r\n            total_plazo = cantidad * .05;\r\n            break;\r\n        case 6:\r\n            total_plazo = cantidad * .10;\r\n            break;\r\n        case 12:\r\n            total_plazo = cantidad * .15;\r\n            break;\r\n        case 24:\r\n            total_plazo = cantidad * .20;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return total_plazo + total_cantidad + cantidad;\r\n}","import React from 'react';\r\n\r\nconst Mensaje = () => (\r\n    <p>Agrega una antidad y plazo a pagar para cotizar</p>\r\n);\r\n \r\nexport default Mensaje;","import React from 'react';\r\n\r\n\r\nconst Resultado = ({total, plazo, cantidad}) => (\r\n        <div className=\"u-full-widht resultado\">\r\n            <h2>Resumen</h2>\r\n            <p>La cantidad solicitada es : $ {cantidad}</p>\r\n            <p>A pagar en: $ {plazo} Meses</p>\r\n            <p>Su pago mensual es de: $ {(total/plazo).toFixed(2)}</p>\r\n            <p>Total a pagar: $ {(total).toFixed(2)}</p>\r\n        </div>\r\n);\r\n\r\n \r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css'\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"sk-chase\">\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Spinner;","import React, { Fragment, useState} from 'react';\r\nimport Header from './componentes/Header'\r\nimport Formulario from './componentes/Formulario'\r\nimport Mensaje from './componentes/Mensaje'\r\nimport Resultado from './componentes/Resultado'\r\nimport Spinner from './componentes/Spinner'\r\n\r\nfunction App() {\r\n   // Definir un state\r\n   const [cantidad, guardar_cantidad] = useState(0);\r\n   const [plazo, guardar_plazo] = useState(\"\");\r\n   const [total,guardar_total] = useState(0);\r\n   const [cargando, guardar_cargando]= useState();\r\n\r\n\r\n   let componete;\r\n  if (cargando){\r\n    componete = <Spinner />\r\n  } else if(total === 0){\r\n    componete = <Mensaje />\r\n  } else {\r\n    componete = <Resultado \r\n                  total = {total}\r\n                  plazo = {plazo}\r\n                  cantidad = {cantidad}\r\n                />\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n        <Header\r\n          titulo = \"Cotizador de Prestamos\"\r\n          descripccion = \"Utiliza el formulario y obten una cotizacion\"\r\n        />\r\n        <div className = \"container\">\r\n          <Formulario\r\n            cantidad = {cantidad}\r\n            guardar_cantidad = {guardar_cantidad}\r\n            plazo = {plazo}\r\n            guardar_plazo = {guardar_plazo}\r\n            guardar_total = {guardar_total}\r\n            guardar_cargando = {guardar_cargando}\r\n          />\r\n          <div className=\"mensajes\">\r\n            {componete}\r\n          </div>\r\n        </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}